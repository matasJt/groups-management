{"ast":null,"code":"var _jsxFileName = \"/home/emjay/Documents/For Test/PresentCon/groups-management/groups-management/ui/src/Components/Transaction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transaction() {\n  _s();\n  const [members, setMembers] = useState([]);\n  const [payerId, setPayer] = useState();\n  const [split, setSplit] = useState();\n  const {\n    groupId\n  } = useParams();\n  useEffect(() => {\n    axios.get(`http://localhost:5257/Group/${groupId}/Member`).then(response => {\n      setMembers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n  const onPayerOption = () => {\n    const payer = members.map(x => x.id === payerId);\n    axios.post(`http://localhost:5257/Group/${groupId}/Transaction`, {\n      payer: payer\n    }).then(response => {}).catch(error => {\n      alert(\"Name cannot be empty\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"container py-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"Form.ControlPayer\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Payer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        onChange: e => setPayer(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), members.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: member.id,\n          children: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"Form.ControlAmount\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Enter the full amount paid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"Form.ControlSplit\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        onChange: e => setSplit(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Equally\",\n          children: \"Equally\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Percentage\",\n          children: \"Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dynamic\",\n          children: \"Dynamic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: onPayerOption,\n      children: \"Create transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Transaction, \"9dGy4gvTdEDV9EEjGZ6RlqgfpeM=\", false, function () {\n  return [useParams];\n});\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","axios","useParams","jsxDEV","_jsxDEV","Transaction","_s","members","setMembers","payerId","setPayer","split","setSplit","groupId","get","then","response","data","catch","error","console","log","onPayerOption","payer","map","x","id","post","alert","className","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Select","onChange","e","target","value","member","name","Control","type","variant","onClick","_c","$RefreshReg$"],"sources":["/home/emjay/Documents/For Test/PresentCon/groups-management/groups-management/ui/src/Components/Transaction.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Member } from \"../Model/Member.model\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { Transact } from \"../Model/Transaction.model\";\n\nfunction Transaction() {\n  const [members, setMembers] = useState<Member[]>([]);\n  const [payerId, setPayer] = useState<string>();\n  const [split, setSplit] = useState<string>();\n  const { groupId } = useParams<{ groupId: string }>();\n\n  useEffect(() => {\n    axios\n      .get<Member[]>(`http://localhost:5257/Group/${groupId}/Member`)\n      .then((response) => {\n        setMembers(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n\n  const onPayerOption = () => {\n    const payer = members.map(x=> x.id === payerId);\n    axios\n      .post<Transact>(`http://localhost:5257/Group/${groupId}/Transaction`, { payer:payer })\n      .then((response) => {\n       \n      }).catch(error=>{\n          alert(\"Name cannot be empty\")\n      })\n  };\n\n  return (\n    <Form className=\"container py-3\">\n      <Form.Group className=\"mb-3\" controlId=\"Form.ControlPayer\">\n        <Form.Label>Payer</Form.Label>\n        <Form.Select onChange={(e) => setPayer(e.target.value)}>\n          <option>-</option>\n          {members.map((member) => (\n            <option value={member.id}>{member.name}</option>\n          ))}\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"Form.ControlAmount\">\n        <Form.Label>Enter the full amount paid</Form.Label>\n        <Form.Control type=\"number\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"Form.ControlSplit\">\n        <Form.Label>Select split</Form.Label>\n        <Form.Select onChange={(e) => setSplit(e.target.value)}>\n          <option>-</option>\n          <option value=\"Equally\">Equally</option>\n          <option value=\"Percentage\">Percentage</option>\n          <option value=\"Dynamic\">Dynamic</option>\n        </Form.Select>\n      </Form.Group>\n      <Button variant=\"primary\" onClick={onPayerOption}>\n        Create transaction\n      </Button>\n    </Form>\n  );\n}\n\nexport default Transaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}